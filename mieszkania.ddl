-- Generated by Oracle SQL Developer Data Modeler 17.3.0.261.1529
--   at:        2018-01-08 00:04:49 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE adres (
    id               NUMBER(11) NOT NULL,
    miasto           VARCHAR2(32),
    ulica            VARCHAR2(32),
    numer            VARCHAR2(10),
    kod_pocztowy     VARCHAR2(6),
    najemca_id       NUMBER(11) NOT NULL,
    wynajmujacy_id   NUMBER(11) NOT NULL
);

ALTER TABLE adres ADD CONSTRAINT adres_pk PRIMARY KEY ( id );

CREATE TABLE agent (
    id                     NUMBER(11) NOT NULL,
    imie                   VARCHAR2(30),
    nazwisko               VARCHAR2(50),
    biuro_wynajmujace_id   NUMBER(11) NOT NULL,
    pesel                  VARCHAR2(11) NOT NULL
);

ALTER TABLE agent ADD CONSTRAINT agent_pk PRIMARY KEY ( id );

CREATE TABLE agent_to_rejon (
    rejon_id   NUMBER(11) NOT NULL,
    agent_id   NUMBER(11) NOT NULL
);

ALTER TABLE agent_to_rejon ADD CONSTRAINT relation_26_pk PRIMARY KEY ( rejon_id,
agent_id );

CREATE TABLE biuro_wynajmujace (
    id          NUMBER(11) NOT NULL,
    nazwa       VARCHAR2(30),
    prezes_id   NUMBER(11) NOT NULL
);

ALTER TABLE biuro_wynajmujace ADD CONSTRAINT biuro_wynajmujace_pk PRIMARY KEY ( id );

CREATE TABLE czarna_lista (
    id           NUMBER(11) NOT NULL,
    powod        VARCHAR2(100),
    najemca_id   NUMBER(11) NOT NULL
);

ALTER TABLE czarna_lista ADD CONSTRAINT czarna_lista_pk PRIMARY KEY ( id );

CREATE TABLE data (
    id           NUMBER(11) NOT NULL,
    poczatek     DATE,
    koniec       DATE,
    okres        VARCHAR2(30),
    wynajem_id   NUMBER(11) NOT NULL
);

ALTER TABLE data ADD CONSTRAINT data_pk PRIMARY KEY ( id );

CREATE TABLE dostepnosc (
    id      NUMBER(11) NOT NULL,
    dzien   DATE
);

ALTER TABLE dostepnosc ADD CONSTRAINT dostepnosc_pk PRIMARY KEY ( id );

CREATE TABLE dostepnosc_to_agent (
    agent_id        NUMBER(11) NOT NULL,
    dostepnosc_id   NUMBER(11) NOT NULL
);

ALTER TABLE dostepnosc_to_agent ADD CONSTRAINT relation_27_pk PRIMARY KEY ( agent_id,
dostepnosc_id );

CREATE TABLE dostepnosc_to_pracownik (
    dostepnosc_id   NUMBER(11) NOT NULL,
    pracownik_id    NUMBER(11) NOT NULL
);

ALTER TABLE dostepnosc_to_pracownik ADD CONSTRAINT relation_19_pk PRIMARY KEY ( dostepnosc_id,
pracownik_id );

CREATE TABLE ekipa_remontowa (
    id           NUMBER(11) NOT NULL,
    liczebnosc   NUMBER(5),
    nazwa        VARCHAR2(30),
    cena         BINARY_DOUBLE NOT NULL,
    data_konca   DATE NOT NULL
);

ALTER TABLE ekipa_remontowa ADD CONSTRAINT ekipa_remontowa_pk PRIMARY KEY ( id );

CREATE TABLE firma_sprzatajaca (
    id          NUMBER(11) NOT NULL,
    nazwa       VARCHAR2(30),
    prezes_id   NUMBER(11) NOT NULL
);

ALTER TABLE firma_sprzatajaca ADD CONSTRAINT firma_sprzatajaca_pk PRIMARY KEY ( id );

CREATE TABLE kontakt (
    id               NUMBER(11) NOT NULL,
    telefon          NUMBER(20),
    fax              VARCHAR2(20),
    email            VARCHAR2(50),
    wynajmujacy_id   NUMBER(11) NOT NULL,
    najemca_id       NUMBER(11) NOT NULL
);

ALTER TABLE kontakt ADD CONSTRAINT kontakt_pk PRIMARY KEY ( id );

CREATE TABLE mieszkanie (
    id                     INTEGER NOT NULL,
    status                 VARCHAR2(32),
    wynajmujacy_id         NUMBER(11) NOT NULL,
    spoldzielnia_id        NUMBER(11) NOT NULL,
    firma_sprzatajaca_id   NUMBER(11) NOT NULL,
    biuro_wynajmujace_id   NUMBER(11) NOT NULL,
    cena                   NUMBER,
    miasto                 VARCHAR2(50),
    ulica                  VARCHAR2(50),
    numer                  VARCHAR2(40),
    dzielnica              VARCHAR2(50)
);

ALTER TABLE mieszkanie ADD CONSTRAINT mieszkanie_pk PRIMARY KEY ( id );

CREATE TABLE najemca (
    id         NUMBER(11) NOT NULL,
    imie       VARCHAR2(30),
    nazwisko   VARCHAR2(50),
    pesel      VARCHAR2(11) NOT NULL
);

ALTER TABLE najemca ADD CONSTRAINT najemca_pk PRIMARY KEY ( id );

CREATE TABLE pracownik (
    id                     NUMBER(11) NOT NULL,
    imie                   VARCHAR2(30),
    nazwisko               VARCHAR2(50),
    rola                   VARCHAR2(50),
    firma_sprzatajaca_id   NUMBER(11) NOT NULL,
    pesel                  VARCHAR2(11) NOT NULL
);

ALTER TABLE pracownik ADD CONSTRAINT pracownik_pk PRIMARY KEY ( id );

CREATE TABLE prezes (
    id         NUMBER(11) NOT NULL,
    imie       VARCHAR2(100),
    nazwisko   VARCHAR2(100),
    pesel      VARCHAR2(11) NOT NULL
);

ALTER TABLE prezes ADD CONSTRAINT prezes_pk PRIMARY KEY ( id );

CREATE TABLE rejon (
    id          NUMBER(11) NOT NULL,
    nazwa       VARCHAR2(30),
    dzielnica   VARCHAR2(30),
    miasto      VARCHAR2(30)
);

ALTER TABLE rejon ADD CONSTRAINT rejon_pk PRIMARY KEY ( id );

CREATE TABLE remont (
    id                   NUMBER(11) NOT NULL,
    zakres               VARCHAR2(100),
    uwagi                VARCHAR2(100),
    ekipa_remontowa_id   NUMBER(11) NOT NULL
);

ALTER TABLE remont ADD CONSTRAINT remont_pk PRIMARY KEY ( id );

CREATE TABLE remont_to_mieszkanie (
    mieszkanie_id   INTEGER NOT NULL,
    remont_id       NUMBER(11) NOT NULL
);

ALTER TABLE remont_to_mieszkanie ADD CONSTRAINT relation_28_pk PRIMARY KEY ( mieszkanie_id,
remont_id );

CREATE TABLE spoldzielnia (
    id          NUMBER(11) NOT NULL,
    nazwa       VARCHAR2(100),
    prezes_id   NUMBER(11) NOT NULL
);

ALTER TABLE spoldzielnia ADD CONSTRAINT spoldzielnia_pk PRIMARY KEY ( id );

CREATE TABLE wplaty (
    id           VARCHAR2(11) NOT NULL,
    waluta       VARCHAR2(30),
    suma         NUMBER,
    wynajem_id   NUMBER(11) NOT NULL
);

ALTER TABLE wplaty ADD CONSTRAINT wplaty_pk PRIMARY KEY ( id );

CREATE TABLE wynajem (
    id              NUMBER(11) NOT NULL,
    umowa           VARCHAR2(100),
    mieszkanie_id   INTEGER NOT NULL,
    najemca_id      NUMBER(11) NOT NULL
);

ALTER TABLE wynajem ADD CONSTRAINT wynajem_pk PRIMARY KEY ( id );

CREATE TABLE wynajmujacy (
    id         NUMBER(11) NOT NULL,
    imie       VARCHAR2(30),
    nazwisko   VARCHAR2(50),
    pesel      VARCHAR2(11) NOT NULL
);

ALTER TABLE wynajmujacy ADD CONSTRAINT wynajmujacy_pk PRIMARY KEY ( id );

CREATE TABLE wyposazenie (
    id                  NUMBER(11) NOT NULL,
    nazwa               VARCHAR2(30),
    przeznaczenie       VARCHAR2(100),
    opis                VARCHAR2(50),
    nr_faktury_zakupu   NUMBER(30),
    mieszkanie_id       INTEGER NOT NULL
);

ALTER TABLE wyposazenie ADD CONSTRAINT wyposazenie_pk PRIMARY KEY ( id );

ALTER TABLE adres
    ADD CONSTRAINT adres_najemca_fk FOREIGN KEY ( najemca_id )
        REFERENCES najemca ( id );

ALTER TABLE adres
    ADD CONSTRAINT adres_wynajmujacy_fk FOREIGN KEY ( wynajmujacy_id )
        REFERENCES wynajmujacy ( id );

ALTER TABLE agent
    ADD CONSTRAINT agent_biuro_wynajmujace_fk FOREIGN KEY ( biuro_wynajmujace_id )
        REFERENCES biuro_wynajmujace ( id );

ALTER TABLE biuro_wynajmujace
    ADD CONSTRAINT biuro_wynajmujace_prezes_fk FOREIGN KEY ( prezes_id )
        REFERENCES prezes ( id );

ALTER TABLE czarna_lista
    ADD CONSTRAINT czarna_lista_najemca_fk FOREIGN KEY ( najemca_id )
        REFERENCES najemca ( id );

ALTER TABLE data
    ADD CONSTRAINT data_wynajem_fk FOREIGN KEY ( wynajem_id )
        REFERENCES wynajem ( id );

ALTER TABLE firma_sprzatajaca
    ADD CONSTRAINT firma_sprzatajaca_prezes_fk FOREIGN KEY ( prezes_id )
        REFERENCES prezes ( id );

ALTER TABLE kontakt
    ADD CONSTRAINT kontakt_najemca_fk FOREIGN KEY ( najemca_id )
        REFERENCES najemca ( id );

ALTER TABLE kontakt
    ADD CONSTRAINT kontakt_wynajmujacy_fk FOREIGN KEY ( wynajmujacy_id )
        REFERENCES wynajmujacy ( id );

ALTER TABLE mieszkanie
    ADD CONSTRAINT mieszkanie_biuro_wynajmuj_fk FOREIGN KEY ( biuro_wynajmujace_id )
        REFERENCES biuro_wynajmujace ( id );

ALTER TABLE mieszkanie
    ADD CONSTRAINT mieszkanie_firma_sprzataj_fk FOREIGN KEY ( firma_sprzatajaca_id )
        REFERENCES firma_sprzatajaca ( id );

ALTER TABLE mieszkanie
    ADD CONSTRAINT mieszkanie_spoldzielnia_fk FOREIGN KEY ( spoldzielnia_id )
        REFERENCES spoldzielnia ( id );

ALTER TABLE mieszkanie
    ADD CONSTRAINT mieszkanie_wynajmujacy_fk FOREIGN KEY ( wynajmujacy_id )
        REFERENCES wynajmujacy ( id );

ALTER TABLE pracownik
    ADD CONSTRAINT pracownik_firma_sprzatajaca_fk FOREIGN KEY ( firma_sprzatajaca_id )
        REFERENCES firma_sprzatajaca ( id );

ALTER TABLE dostepnosc_to_pracownik
    ADD CONSTRAINT relation_19_dostepnosc_fk FOREIGN KEY ( dostepnosc_id )
        REFERENCES dostepnosc ( id );

ALTER TABLE dostepnosc_to_pracownik
    ADD CONSTRAINT relation_19_pracownik_fk FOREIGN KEY ( pracownik_id )
        REFERENCES pracownik ( id );

ALTER TABLE agent_to_rejon
    ADD CONSTRAINT relation_26_agent_fk FOREIGN KEY ( agent_id )
        REFERENCES agent ( id );

ALTER TABLE agent_to_rejon
    ADD CONSTRAINT relation_26_rejon_fk FOREIGN KEY ( rejon_id )
        REFERENCES rejon ( id );

ALTER TABLE dostepnosc_to_agent
    ADD CONSTRAINT relation_27_agent_fk FOREIGN KEY ( agent_id )
        REFERENCES agent ( id );

ALTER TABLE dostepnosc_to_agent
    ADD CONSTRAINT relation_27_dostepnosc_fk FOREIGN KEY ( dostepnosc_id )
        REFERENCES dostepnosc ( id );

ALTER TABLE remont_to_mieszkanie
    ADD CONSTRAINT relation_28_mieszkanie_fk FOREIGN KEY ( mieszkanie_id )
        REFERENCES mieszkanie ( id );

ALTER TABLE remont_to_mieszkanie
    ADD CONSTRAINT relation_28_remont_fk FOREIGN KEY ( remont_id )
        REFERENCES remont ( id );

ALTER TABLE remont
    ADD CONSTRAINT remont_ekipa_remontowa_fk FOREIGN KEY ( ekipa_remontowa_id )
        REFERENCES ekipa_remontowa ( id );

ALTER TABLE spoldzielnia
    ADD CONSTRAINT spoldzielnia_prezes_fk FOREIGN KEY ( prezes_id )
        REFERENCES prezes ( id );

ALTER TABLE wplaty
    ADD CONSTRAINT wplaty_wynajem_fk FOREIGN KEY ( wynajem_id )
        REFERENCES wynajem ( id );

ALTER TABLE wynajem
    ADD CONSTRAINT wynajem_mieszkanie_fk FOREIGN KEY ( mieszkanie_id )
        REFERENCES mieszkanie ( id );

ALTER TABLE wynajem
    ADD CONSTRAINT wynajem_najemca_fk FOREIGN KEY ( najemca_id )
        REFERENCES najemca ( id );

ALTER TABLE wyposazenie
    ADD CONSTRAINT wyposazenie_mieszkanie_fk FOREIGN KEY ( mieszkanie_id )
        REFERENCES mieszkanie ( id );

CREATE SEQUENCE adres_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER adres_id_trg BEFORE
    INSERT ON adres
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := adres_id_seq.nextval;
END;
/

CREATE SEQUENCE agent_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER agent_id_trg BEFORE
    INSERT ON agent
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := agent_id_seq.nextval;
END;
/

CREATE SEQUENCE biuro_wynajmujace_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER biuro_wynajmujace_id_trg BEFORE
    INSERT ON biuro_wynajmujace
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := biuro_wynajmujace_id_seq.nextval;
END;
/

CREATE SEQUENCE czarna_lista_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER czarna_lista_id_trg BEFORE
    INSERT ON czarna_lista
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := czarna_lista_id_seq.nextval;
END;
/

CREATE SEQUENCE data_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER data_id_trg BEFORE
    INSERT ON data
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := data_id_seq.nextval;
END;
/

CREATE SEQUENCE dostepnosc_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dostepnosc_id_trg BEFORE
    INSERT ON dostepnosc
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := dostepnosc_id_seq.nextval;
END;
/

CREATE SEQUENCE ekipa_remontowa_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ekipa_remontowa_id_trg BEFORE
    INSERT ON ekipa_remontowa
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := ekipa_remontowa_id_seq.nextval;
END;
/

CREATE SEQUENCE firma_sprzatajaca_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER firma_sprzatajaca_id_trg BEFORE
    INSERT ON firma_sprzatajaca
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := firma_sprzatajaca_id_seq.nextval;
END;
/

CREATE SEQUENCE kontakt_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER kontakt_id_trg BEFORE
    INSERT ON kontakt
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := kontakt_id_seq.nextval;
END;
/

CREATE SEQUENCE mieszkanie_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER mieszkanie_id_trg BEFORE
    INSERT ON mieszkanie
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := mieszkanie_id_seq.nextval;
END;
/

CREATE SEQUENCE najemca_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER najemca_id_trg BEFORE
    INSERT ON najemca
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := najemca_id_seq.nextval;
END;
/

CREATE SEQUENCE pracownik_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER pracownik_id_trg BEFORE
    INSERT ON pracownik
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := pracownik_id_seq.nextval;
END;
/

CREATE SEQUENCE prezes_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER prezes_id_trg BEFORE
    INSERT ON prezes
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := prezes_id_seq.nextval;
END;
/

CREATE SEQUENCE rejon_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER rejon_id_trg BEFORE
    INSERT ON rejon
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := rejon_id_seq.nextval;
END;
/

CREATE SEQUENCE remont_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER remont_id_trg BEFORE
    INSERT ON remont
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := remont_id_seq.nextval;
END;
/

CREATE SEQUENCE spoldzielnia_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER spoldzielnia_id_trg BEFORE
    INSERT ON spoldzielnia
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := spoldzielnia_id_seq.nextval;
END;
/

CREATE SEQUENCE wplaty_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER wplaty_id_trg BEFORE
    INSERT ON wplaty
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := wplaty_id_seq.nextval;
END;
/

CREATE SEQUENCE wynajem_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER wynajem_id_trg BEFORE
    INSERT ON wynajem
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := wynajem_id_seq.nextval;
END;
/

CREATE SEQUENCE wynajmujacy_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER wynajmujacy_id_trg BEFORE
    INSERT ON wynajmujacy
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := wynajmujacy_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            24
-- CREATE INDEX                             0
-- ALTER TABLE                             52
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          19
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         19
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
